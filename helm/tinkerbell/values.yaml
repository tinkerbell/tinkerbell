# TRUSTED_PROXIES=$(kubectl get nodes -o jsonpath='{.items[*].spec.podCIDR}' | tr ' ' ',')
# LB_IP=192.168.2.116
# the ARTIFACTS_FILE_SERVER is used to set the load balancer IP for the HookOS/nginx service object and will be used to configure TINKERBELL_IPXE_HTTP_SCRIPT_OSIE_URL in the Tinkerbell deployment.
# ARTIFACTS_FILE_SERVER=http://192.168.2.117:7173
# helm install tinkerbell tinkerbell/ --create-namespace --namespace tinkerbell --wait --set "trustedProxies={${TRUSTED_PROXIES}}" --set "publicIP=$LB_IP" --set "artifactsFileServer=$ARTIFACTS_FILE_SERVER" --set "deployment.agentImageTag=latest" --set "deployment.imageTag=latest"
artifactsFileServer:
deployment:
  additionalEnvs: []
  # - name: MY_ENV_VAR
  #   value: "my-value"
  additionalArgs: []
  # - "--my-arg=my-value"
  affinity: {}
  agentImage: ghcr.io/tinkerbell/tink-agent
  # agentImageTag is here as a placeholder and to show its possible to be set.
  # It is not set because in the deployment.yaml a coalesce is used with this value
  # and the .Chart.AppVersion. This allows CI and the release process to set the value properly.
  agentImageTag:
  daemonSet:
    enabled: false
  envs:
    globals:
      backend: "kube"
      backendFilePath: ""
      backendKubeConfig: ""
      backendKubeNamespace: ""
      enableCRDMigrations: true
      enableRufioController: true
      enableSecondstar: true
      enableSmee: true
      enableTootles: true
      enableTinkServer: true
      enableTinkController: true
      logLevel: 0
      otelEndpoint: ""
      otelInsecure: false
      publicIpv4: ""
      trustedProxies: ""
    rufio:
      bmcConnectTimeout: "2m0s"
      enableLeaderElection: true
      leaderElectionNamespace: ""
      logLevel: 0
      metricsAddr: ""
      powerCheckInterval: "30m0s"
      probeAddr: ""
    secondstar:
      bindPort: 2222
      hostKeyPath: ""
      ipmitoolPath: "/usr/sbin/ipmitool"
      idleTimeout: "15m"
      logLevel: 0
    smee:
      dhcpBindAddr: ""
      dhcpBindInterface: ""
      dhcpEnabled: true
      dhcpIPForPacket: ""
      dhcpIpxeHttpBinaryHost: ""
      dhcpIpxeHttpBinaryPath: "/ipxe"
      dhcpIpxeHttpBinaryPort: 7171
      dhcpIpxeHttpBinaryScheme: "http"
      dhcpIpxeHttpScriptHost: ""
      dhcpIpxeHttpScriptPath: "auto.ipxe"
      dhcpIpxeHttpScriptPort: 7171
      dhcpIpxeHttpScriptPrependMac: true
      dhcpIpxeHttpScriptScheme: "http"
      dhcpMode: "reservation" # reservation, proxy, auto-proxy
      dhcpSyslogIP: ""
      dhcpTftpIP: ""
      dhcpTftpPort: 69
      ipxeEmbeddedScriptPatch: ""
      ipxeHttpBinaryEnabled: true
      ipxeHttpScriptBindAddr: ""
      ipxeHttpScriptBindPort: 7171
      ipxeHttpScriptEnabled: true
      ipxeHttpScriptExtraKernelArgs: [] # Additional kernel arguments to pass to the OSIE. (k=v k=v) that are appended to the kernel cmdline in the iPXE script
      ipxeHttpScriptTrustedProxies: ""
      ipxeHttpScriptOsieURL: ""
      ipxeHttpScriptRetries: 1
      ipxeHttpScriptRetryDelay: 1
      ipxeScriptTinkServerAddrPort: ""
      ipxeScriptTinkServerInsecureTLS: false
      ipxeScriptTinkServerUseTLS: false
      isoEnabled: true
      isoPatchMagicString: ""
      isoStaticIPAMEnabled: true
      isoUpstreamURL: ""
      logLevel: 0
      syslogBindAddr: ""
      syslogBindPort: 514
      syslogEnabled: true
      tftpBlockSize: 512
      tftpServerBindAddr: ""
      tftpServerBindPort: 69
      tftpServerEnabled: true
      tftpTimeout: "10s"
    tinkController:
      enableLeaderElection: true
      leaderElectionNamespace: ""
      logLevel: 0
      metricsAddr: ""
      probeAddr: ""
    tinkServer:
      autoDiscoveryAutoEnrollmentEnabled: false
      autoDiscoveryEnabled: false
      autoDiscoveryNamespace: "" # defaults to the namespace in which Tinkerbell is deployed.
      autoEnrollmentEnabled: false
      bindAddr: ""
      bindPort: 42113
      logLevel: 0
    tootles:
      bindAddr: ""
      bindPort: 7172
      debugMode: false
      logLevel: 0
  hostNetwork: false
  image: ghcr.io/tinkerbell/tinkerbell
  imagePullPolicy: IfNotPresent
  # imageTag is here as a placeholder and to show its possible to be set.
  # It is not set because in the deployment.yaml a coalesce is used with this value
  # and the .Chart.AppVersion. This allows CI and the release process to set the value properly.
  imageTag:
  init:
    enabled: true
    # if `interfaceMode: ipvlan`, then ghcr.io/jacobweinstock/relay-init:v0.1.0 (has nmap and nmap-scripts) is required. Otherwise, alpine can be used. 
    image: ghcr.io/jacobweinstock/relay-init:v0.1.0
    # interfaceMode determines how we create the interface needed to listen for DHCP broadcast traffic.
    # by default macvlan is used. ipvlan is the only other option.
    interfaceMode: macvlan
    # sourceInterface is the Host/Node interface to use for listening for DHCP broadcast packets.
    # When unset, the interface from the default route will be used.
    # sourceInterface: eno1
  nodeSelector: {}
  replicas: 1
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 500m
      memory: 128Mi
  selector: {}
  strategy:
    type: RollingUpdate
  tolerations: []
  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   subPath: "foo"
  #   readOnly: true
name: tinkerbell
publicIP:
rbac:
  name: tinkerbell
  type: ClusterRole # or Role
service:
  annotations: {}
  labels:
    app: tinkerbell
  lbClass: "kube-vip.io/kube-vip-class"
  loadBalancerIP: ""
  name: tinkerbell
  ports:
    dhcp:
      name: dhcp
      port: 67
      protocol: UDP
    grpc:
      name: grpc
      port: 42113
      protocol: TCP
    httpSmee:
      name: http-smee
      port: 7171
      protocol: TCP
    httpTootles:
      name: http-tootles
      port: 7172
      protocol: TCP
    ssh:
      name: ssh
      port: 2222
      protocol: TCP
    syslog:
      name: syslog
      port: 514
      protocol: UDP
    tftp:
      name: tftp
      port: 69
      protocol: UDP
  selector:
    app: tinkerbell
  type: LoadBalancer
trustedProxies: []

optional:
  # enable migration to convert a 0.6.2 values.yaml to a v0.19.x values.yaml.
  # See the migration documentation for more details.
  # https://github.com/tinkerbell/tinkerbell/blob/main/docs/technical/HELM_VALUES_MIGRATION.md
  migration:
    enabled: false

  # hookos objects enable downloading and serving HookOS artifacts.
  # Optional, enabled by default.
  hookos:
    arch: both # x86_64, aarch64, both
    deployment:
      strategy:
        type: RollingUpdate
    # downloadURL only works with the > 0.8.1 Hook release because
    # previous Hook versions didn't provide a checksum file.
    downloadURL: https://github.com/tinkerbell/hook/releases/download/v0.11.0
    enabled: true
    extension: tar.gz # iso, tar.gz, both
    image: nginx:1.27.2
    kernelVersion: both # 5.10, 6.6, both
    name: hookos
    nodeSelector: {}
    persistence:
      # If existingClaim is set, the local persistence volume (localPersistentVolume) objects will NOT be created.
      # Use this to point to an existing production grade storage class.
      existingClaim: ""
      # While local storage is the default, it is not recommended for production use.
      localPersistentVolume:
        accessModes:
          - ReadWriteMany
        extraLabels: {}
        name: hook-artifacts
        # this path must already exist on the node
        path: /tmp
        size: 2Gi
        storageClassName: local-storage
    port: 7173
    scriptImage: bash:5.2.37
    selector:
      app: hookos
    service:
      annotations: {}
      lbClass: "kube-vip.io/kube-vip-class"
      loadBalancerIP: ""
      type: LoadBalancer
    # singleNodeClusterConfig to add tolerations for deployments on control plane nodes. This is defaulted to false.
    singleNodeClusterConfig:
      controlPlaneTolerationsEnabled: false
      nodeAffinityWeight: 1
  
  # kubevip objects are used to provide a LoadBalancer IP for the Tinkerbell services.
  # Optional, enabled by default.
  kubevip:
    # Additional environment variables to pass to the kubevip container. Each entry is expected to have a
    # name and value key. Some keys are already defined - refer to the deployment.yaml template for
    # details.
    #
    # Example
    #   - name: MY_ENV_VAR
    #     value: my-value
    additionalEnv: []
    enabled: true
    image: ghcr.io/kube-vip/kube-vip:v0.9.1
    imagePullPolicy: IfNotPresent
    # Customize the interface KubeVIP advertises on. When unset, KubeVIP will autodetect the interface.
    # interface: enp0s8
    name: kube-vip
    roleBindingName: kube-vip-rolebinding
    roleName: kube-vip-role
    # singleNodeClusterConfig to add tolerations for deployments on control plane nodes. This is defaulted to false.
    singleNodeClusterConfig:
      controlPlaneTolerationsEnabled: false
      nodeAffinityWeight: 1